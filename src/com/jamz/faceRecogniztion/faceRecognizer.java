package com.jamz.faceRecogniztion;

import com.jamz.models.Person;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.Image;
import java.awt.Toolkit;
import java.nio.file.Paths;
import javax.swing.ImageIcon;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import org.opencv.core.Core;
import org.opencv.core.Mat;
import org.opencv.core.MatOfByte;
import org.opencv.core.MatOfRect;
import org.opencv.core.Point;
import org.opencv.core.Rect;
import org.opencv.core.Scalar;
import org.opencv.imgcodecs.Imgcodecs;
import org.opencv.imgproc.Imgproc;
import org.opencv.objdetect.CascadeClassifier;
import org.opencv.videoio.VideoCapture;
import com.jamz.utils.Utils;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
/**
 * 
 * @author Jorge
 * Date: 16-02-2024
 */
public class faceRecognizer extends javax.swing.JFrame {
    
    private final int CAMERA_HARDWARE_ID = 0; 
    private final int DETECTION_THICKNESS = 4;
    
    private final String CASCADE_FILENAME = "haarcascade_frontalface_alt.xml";
    private final Scalar FACE_DETECTED_COLOR = new Scalar(0, 255, 0);
    private final String DOWNLOADS_FOLDER = Paths.get(System.getProperty("user.home"), "Downloads").toString();
    private final String CASCADE_FULLPATH = Paths.get(DOWNLOADS_FOLDER, CASCADE_FILENAME).toString();
    private final String ICON_PÁTH = "src/resources/icon.png";
    
    private CascadeClassifier faceCascade;
    private VideoCapture capture;
    private Mat image;
    private MatOfRect faceDetections;
    
    private final List<Person> detectedFaces = new ArrayList<>();
    //private final Set<Integer> detectedFaces = new HashSet<>();
    
    private Thread cameraThread;
    private Thread personsThread;
    
    public faceRecognizer() {
        initComponents();
        
        System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
            
        frameConfiguration();
        startCamera();
    }
    
    private void frameConfiguration() {
        setLocationRelativeTo(null);
        
        this.setPreferredSize(new Dimension(1280, 720));
        
        Toolkit tk = Toolkit.getDefaultToolkit();
        
        Image icon = tk.getImage(ICON_PÁTH);
        
        setIconImage(icon);
    }
    
    protected void startCamera() {
        faceCascade = new CascadeClassifier();
        faceCascade.load(CASCADE_FULLPATH);
        
        capture = new VideoCapture(CAMERA_HARDWARE_ID);
        image = new Mat();
    }
    
    private void makeRecognition() {
        byte[] data;
        
        while(true) {
            capture.read(image);
            
            faceDetections = new MatOfRect();
            
            faceCascade.detectMultiScale(image, faceDetections);
            
            // Update UI
            Lbl_FacesDetected.setText("Caras detectadas: " + detectedFaces.size());
            
            for (Rect rect: faceDetections.toArray()) {
                Imgproc.rectangle(image,
                                new Point(rect.x, rect.y),
                                new Point(rect.x + rect.width, rect.y + rect.height),
                                FACE_DETECTED_COLOR,
                                DETECTION_THICKNESS); 
                
            }
            
            //for
            
            MatOfByte buffer = new MatOfByte();
            
            Imgcodecs.imencode(".jpg", image, buffer);
            
            data = buffer.toArray();
            
            Image scaledImage = new ImageIcon(data).getImage().getScaledInstance(
                Lbl_Camera.getWidth(), 
                Lbl_Camera.getHeight(), 
                Image.SCALE_SMOOTH
            );
            
            Lbl_Camera.setIcon(new ImageIcon(scaledImage));
            
            // Txt_PersonName.setEditable(true);
            // Btn_AddPerson.setEnabled(true);
            
            // showDetectedPersons();
        }
    }
    
    private void showDetectedPersons() {
        if (detectedFaces.isEmpty()) return; 
       
        // Create here the image (face) and a index
        /*for (Rect rect : detectedFaces) {
            Mat faceMat = new Mat(image, rect);
            
            ImageIcon icon = new ImageIcon();
            
            icon.setImage(Utils.matToBufferedImage(faceMat));
            
            Pnl_UnRecognizedPeople.add(Utils.createPersonComponent(icon));
            Pnl_UnRecognizedPeople.repaint();
        }*/
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Lbl_Title = new javax.swing.JLabel();
        Pnl_Controls = new javax.swing.JPanel();
        Lbl_FacesDetected = new javax.swing.JLabel();
        Cmb_Devices = new javax.swing.JComboBox<>();
        Btn_Start = new javax.swing.JButton();
        Lbl_CaptureDevices = new javax.swing.JLabel();
        Btn_ShowDetectedPersons = new javax.swing.JButton();
        Lbl_Camera = new javax.swing.JLabel();
        Lbl_PersonsTitle = new javax.swing.JLabel();
        Btn_AddPerson = new javax.swing.JButton();
        Txt_PersonName = new javax.swing.JTextField();
        Tbp_RecognizedPersons = new javax.swing.JTabbedPane();
        Scr_1 = new javax.swing.JScrollPane();
        Pnl_UnRecognizedPeople = new javax.swing.JPanel();
        Scr_2 = new javax.swing.JScrollPane();
        Pnl_RecognizedPeople = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Lbl_Title.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        Lbl_Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Lbl_Title.setText("Open CV - Face recognition");
        Lbl_Title.setVerifyInputWhenFocusTarget(false);

        Pnl_Controls.setBackground(new java.awt.Color(204, 204, 204));

        Lbl_FacesDetected.setText("Caras detectadas:");

        Btn_Start.setText("Detectar caras");
        Btn_Start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_StartActionPerformed(evt);
            }
        });

        Lbl_CaptureDevices.setText("Dispositivos de captura:");

        Btn_ShowDetectedPersons.setText("Mostrar personas no reconocidas");
        Btn_ShowDetectedPersons.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_ShowDetectedPersonsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Pnl_ControlsLayout = new javax.swing.GroupLayout(Pnl_Controls);
        Pnl_Controls.setLayout(Pnl_ControlsLayout);
        Pnl_ControlsLayout.setHorizontalGroup(
            Pnl_ControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Pnl_ControlsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Lbl_FacesDetected, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(129, 129, 129)
                .addComponent(Lbl_CaptureDevices)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Cmb_Devices, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(137, 137, 137)
                .addComponent(Btn_ShowDetectedPersons, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(34, 34, 34)
                .addComponent(Btn_Start, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        Pnl_ControlsLayout.setVerticalGroup(
            Pnl_ControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Pnl_ControlsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Pnl_ControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Pnl_ControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Lbl_FacesDetected, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Cmb_Devices, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                        .addComponent(Lbl_CaptureDevices))
                    .addComponent(Btn_ShowDetectedPersons, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Btn_Start, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        Lbl_Camera.setBackground(new java.awt.Color(255, 255, 255));
        Lbl_Camera.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Lbl_Camera.setOpaque(true);

        Lbl_PersonsTitle.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Lbl_PersonsTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Lbl_PersonsTitle.setText("Personas reconocidas");

        Btn_AddPerson.setText("Añadir persona");
        Btn_AddPerson.setEnabled(false);

        Txt_PersonName.setEditable(false);

        Scr_1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        Scr_1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        java.awt.FlowLayout flowLayout1 = new java.awt.FlowLayout();
        flowLayout1.setAlignOnBaseline(true);
        Pnl_UnRecognizedPeople.setLayout(flowLayout1);
        Scr_1.setViewportView(Pnl_UnRecognizedPeople);

        Tbp_RecognizedPersons.addTab("Personas no reconocidas", Scr_1);

        Scr_2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        Scr_2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        java.awt.FlowLayout flowLayout2 = new java.awt.FlowLayout();
        flowLayout2.setAlignOnBaseline(true);
        Pnl_RecognizedPeople.setLayout(flowLayout2);
        Scr_2.setViewportView(Pnl_RecognizedPeople);

        Tbp_RecognizedPersons.addTab("Personas reconocidas", Scr_2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Lbl_Title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Pnl_Controls, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Lbl_Camera, javax.swing.GroupLayout.PREFERRED_SIZE, 656, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(Lbl_PersonsTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Tbp_RecognizedPersons)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(Btn_AddPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Txt_PersonName, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Lbl_Title)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Pnl_Controls, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Lbl_Camera, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Lbl_PersonsTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Tbp_RecognizedPersons, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Btn_AddPerson)
                            .addComponent(Txt_PersonName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(88, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Btn_StartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_StartActionPerformed
        cameraThread = new Thread(() -> {
            makeRecognition();
        });
        
        if (cameraThread.isAlive()) {
            cameraThread.interrupt();
            cameraThread.start();
        }
        
        cameraThread.start();
    }//GEN-LAST:event_Btn_StartActionPerformed

    private void Btn_ShowDetectedPersonsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_ShowDetectedPersonsActionPerformed
        Btn_AddPerson.setEnabled(true);
        Txt_PersonName.setEditable(true);
        
        personsThread = new Thread(() ->{
            showDetectedPersons();
        });
        
        personsThread.start();
    }//GEN-LAST:event_Btn_ShowDetectedPersonsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        }
        catch (IllegalAccessException | 
               InstantiationException | 
               ClassNotFoundException |
               UnsupportedLookAndFeelException e) {
            System.err.print(e);
        }
        //</editor-fold>

        /* Create and display the form */
        EventQueue.invokeLater(() -> {
            faceRecognizer frame = new faceRecognizer();
            
            frame.setVisible(true);
            
            //new Thread(frame::startCamera).start();
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btn_AddPerson;
    private javax.swing.JButton Btn_ShowDetectedPersons;
    private javax.swing.JButton Btn_Start;
    private javax.swing.JComboBox<String> Cmb_Devices;
    private javax.swing.JLabel Lbl_Camera;
    private javax.swing.JLabel Lbl_CaptureDevices;
    private javax.swing.JLabel Lbl_FacesDetected;
    private javax.swing.JLabel Lbl_PersonsTitle;
    private javax.swing.JLabel Lbl_Title;
    private javax.swing.JPanel Pnl_Controls;
    private javax.swing.JPanel Pnl_RecognizedPeople;
    private javax.swing.JPanel Pnl_UnRecognizedPeople;
    private javax.swing.JScrollPane Scr_1;
    private javax.swing.JScrollPane Scr_2;
    private javax.swing.JTabbedPane Tbp_RecognizedPersons;
    private javax.swing.JTextField Txt_PersonName;
    // End of variables declaration//GEN-END:variables

}
